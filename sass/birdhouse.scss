/*
 *  _     _         _ _                          
 * | |   (_)       | | |                         
 * | |__  _ _ __ __| | |__   ___  _   _ ___  ___ 
 * | '_ \| | '__/ _` | '_ \ / _ \| | | / __|/ _ \
 * | |_) | | | | (_| | | | | (_) | |_| \__ \  __/
 * |_.__/|_|_|  \__,_|_| |_|\___/ \__,_|___/\___|
 *
 * Birdhouse
 * CSS flexbox responsive grid framework
 *
 * Copyright (c) 2015-2017 Michael Babcock
 * Distributed under the MIT License
 * http://opensource.org/licenses/MIT
 *
 */

@import "_variables";
@import "_mixins";

.birdhouse{
    width: 100%; 
    max-width: $birdhouse-grid-max-width;
    margin: 0 auto;
}

.birdhouse.fluid{
    width: 100%;
    max-width: 100%;
}

.birdhouse *{
    @include birdhouse-border-box;
}

.row, .r {
  padding: 0;
  margin: 0;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-direction: row;
  -webkit-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}

[class*='columns-'], [class*='clz'], 
[class*='csx'], [class*='csm'], 
[class*='cmd'], [class*='clg'], 
[class*='cxl'] {
  -ms-flex-positive: 1;
  -webkit-flex-grow: 1;
  flex-grow: 1;
  -ms-flex-negative: 0;
  -webkit-flex-shrink: 0;
  flex-shrink: 0;
  -ms-flex-preferred-size: 100%;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
}

/* Small devices (tablets, 768px and up) */
/* Medium devices (desktops, 992px and up) */
/* Large devices (large desktops, 1200px and up) */

.birdhouse {
  .row {
    
    /* Small devices (mobile) */
    @media #{$birdhouse-breakpoint-xtra-small} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: 100%;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-xsmall-#{$i}, .cxs#{$i}  { 
            flex-basis: $basis;
        }
      }
    }

    /* Small devices (mobile) */
    @media #{$birdhouse-breakpoint-small} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i * 4;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-small-#{$i}, .csm#{$i} { 
            flex-basis: $basis;
        }
      }
    }

    /* Medium devices (desktops) */
    @media #{$birdhouse-breakpoint-medium} {
      
      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i * 2;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      /* by suffix assignment */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-medium-#{$i}, .cmd#{$i} { 
            flex-basis: $basis;
        }
      }
    }

    @media #{$birdhouse-breakpoint-large} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-large-#{$i}, .clg#{$i} { 
            flex-basis: $basis;
        }
      }
    }

    @media #{$birdhouse-breakpoint-xtra-large} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-xlarge-#{$i}, .cxl#{$i} { 
            flex-basis: $basis;
        }
      }
    }
  }

  .r {
    /* Small devices (mobile) */
    @media #{$birdhouse-breakpoint-xtra-small} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: 100%;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-xsmall-#{$i}, .cxs#{$i}  { 
            flex-basis: $basis;
        }
      }
    }

    /* Small devices (mobile) */
    @media #{$birdhouse-breakpoint-small} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i * 4;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-small-#{$i}, .csm#{$i} { 
            flex-basis: $basis;
        }
      }
    }

    /* Medium devices (desktops) */
    @media #{$birdhouse-breakpoint-medium} {
      
      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i * 2;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      /* by suffix assignment */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-medium-#{$i}, .cmd#{$i} { 
            flex-basis: $basis;
        }
      }
    }

    @media #{$birdhouse-breakpoint-large} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-large-#{$i}, .clg#{$i} { 
            flex-basis: $basis;
        }
      }
    }

    @media #{$birdhouse-breakpoint-xtra-large} {

      /* lazy */
      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-lazy-#{$i}, .clz#{$i} {
            flex-basis: $basis;
        }
      }

      @for $i from 1 through $birdhouse-columns {

        $basis: 100% / $birdhouse-columns * $i;
        @if ($basis > 100) {
          $basis: 100%;
        }

        .columns-xlarge-#{$i}, .cxl#{$i} { 
            flex-basis: $basis;
        }
      }
    }
  }
}