/*
 *  _     _         _ _                          
 * | |   (_)       | | |                         
 * | |__  _ _ __ __| | |__   ___  _   _ ___  ___ 
 * | '_ \| | '__/ _` | '_ \ / _ \| | | / __|/ _ \
 * | |_) | | | | (_| | | | | (_) | |_| \__ \  __/
 * |_.__/|_|_|  \__,_|_| |_|\___/ \__,_|___/\___|
 *
 * Birdhouse
 * CSS flexbox responsive grid framework
 *
 * Copyright (c) 2017 Michael Babcock
 * Distributed under the MIT License
 * http://opensource.org/licenses/MIT
 *
 * Version 0.7.4
 */

@import "_variables";
@import "_mixins";

.birdhouse {
    width: 100%; 
    max-width: $birdhouse-grid-max-width;
    margin: 0 auto;
}

.birdhouse.fluid {
    width: 100%;
    max-width: 100%;
}

.birdhouse *{
    @include birdhouse-border-box;
}

.birdhouse .row, .birdhouse .r {
  padding: 0;
  margin: 0;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-direction: row;
  -webkit-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-preferred-size: 100%;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
}

.birdhouse {
  .row {
    [class*='columns-'], [class*='clz'], 
    [class*='cxs'], [class*='csm'], 
    [class*='cmd'], [class*='clg'], 
    [class*='cxl'] {
      -ms-flex-positive: 1;
      -webkit-flex-grow: 1;
      flex-grow: 1;
      -ms-flex-negative: 0;
      -webkit-flex-shrink: 0;
      flex-shrink: 0;
      -ms-flex-preferred-size: 100%;
      -webkit-flex-basis: 100%;
      flex-basis: 100%;
    }
  }

  .r {
    [class*='columns-'], [class*='clz'], 
    [class*='cxs'], [class*='csm'], 
    [class*='cmd'], [class*='clg'], 
    [class*='cxl'] {
      -ms-flex-positive: 1;
      -webkit-flex-grow: 1;
      flex-grow: 1;
      -ms-flex-negative: 0;
      -webkit-flex-shrink: 0;
      flex-shrink: 0;
      -ms-flex-preferred-size: 100%;
      -webkit-flex-basis: 100%;
      flex-basis: 100%;
    }
  }
}

/* Hide when media reached x breakpoint */
.hide-xsmall, .hd-xs { display: block; }
.hide-small, .hd-sm { display: block; }
.hide-medium, .hd-md { display: block; }
.hide-large, .hd-lg { display: block; }
.hide-xlarge, .hd-xl { display: block; }

/* Show when media reached x breakpoint */
.show-xsmall, .sh-xs { display: none; }
.show-small, .sh-sm { display: none; }
.show-medium, .sh-md { display: none; }
.show-large, .sh-lg { display: none; }
.show-xlarge, .sh-xl { display: none; }

.birdhouse {

  /* Xtra small devices (mobile) */
  @media #{$birdhouse-breakpoint-xtra-small} {
    .hide-xsmall, .hd-xs { display: none; }
    .show-xsmall, .sh-xs { display: block; }
    @for $i from 1 through $birdhouse-columns {
      .row .columns-lazy-#{$i}, .row .clz#{$i}, .r .columns-lazy-#{$i}, .r .clz#{$i} {
          flex-basis: 100%;
      }
    }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-xsmall-#{$i}, .row .cxs#{$i}, .r .columns-xsmall-#{$i}, .r .cxs#{$i}  { 
          flex-basis: $basis;
      }
    }
  }

  /* Small devices (mobile) */
  @media #{$birdhouse-breakpoint-small} {
    .hide-small, .hd-sm { display: none; }
    .show-small, .sh-sm { display: block; }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i * 4;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-lazy-#{$i}, .row .clz#{$i}, .r .columns-lazy-#{$i}, .r .clz#{$i} {
          flex-basis: $basis;
      }
    }

    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-small-#{$i}, .row .csm#{$i}, .r .columns-small-#{$i}, .r .csm#{$i} { 
          flex-basis: $basis;
      }
    }
  }

  /* Medium devices (desktops) */
  @media #{$birdhouse-breakpoint-medium} {
    .hide-medium, .hd-md { display: none; }
    .show-medium, .sh-md { display: block; }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i * 2;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-lazy-#{$i}, .row .clz#{$i}, .r .columns-lazy-#{$i}, .r .clz#{$i} {
          flex-basis: $basis;
      }
    }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-medium-#{$i}, .row .cmd#{$i}, .r .columns-medium-#{$i}, .r .cmd#{$i} { 
          flex-basis: $basis;
      }
    }
  }

  /* Large devices */    
  @media #{$birdhouse-breakpoint-large} {
    .hide-large, .hd-lg { display: none; }
    .show-large, .sh-lg { display: block; }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-lazy-#{$i}, .row .clz#{$i}, .r .columns-lazy-#{$i}, .r .clz#{$i} {
          flex-basis: $basis;
      }
    }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-large-#{$i}, .row .clg#{$i}, .r .columns-large-#{$i}, .r .clg#{$i} { 
          flex-basis: $basis;
      }
    }
  }

  /* Xtra large devices */
  @media #{$birdhouse-breakpoint-xtra-large} {
    .hide-xlarge, .hd-xl { display: none; }
    .show-xlarge, .sh-xl { display: block; }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-lazy-#{$i}, .row .clz#{$i}, .r .columns-lazy-#{$i}, .r .clz#{$i} {
          flex-basis: $basis;
      }
    }
    @for $i from 1 through $birdhouse-columns {
      $basis: 100% / $birdhouse-columns * $i;
      @if ($basis > 100) {
        $basis: 100%;
      }
      .row .columns-xlarge-#{$i}, .row .cxl#{$i}, .r .columns-xlarge-#{$i}, .r .cxl#{$i} { 
          flex-basis: $basis;
      }
    }
  }
}